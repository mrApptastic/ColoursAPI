// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrueColoursAPI.Data;

namespace TrueColoursAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220716085241_synclogs")]
    partial class synclogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TrueColoursAPI.Models.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Blue")
                        .HasColumnType("int");

                    b.Property<int?>("ColourTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Green")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColourTypeId");

                    b.ToTable("TrueColours");
                });

            modelBuilder.Entity("TrueColoursAPI.Models.ColourType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TrueTypes");
                });

            modelBuilder.Entity("TrueColoursAPI.Models.SyncLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrueSyncLogs");
                });

            modelBuilder.Entity("TrueColoursAPI.Models.SyncLogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int?>("ColourId")
                        .HasColumnType("int");

                    b.Property<int?>("SyncLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColourId");

                    b.HasIndex("SyncLogId");

                    b.ToTable("TrueSyncLogDetails");
                });

            modelBuilder.Entity("TrueColoursAPI.Models.Colour", b =>
                {
                    b.HasOne("TrueColoursAPI.Models.ColourType", "ColourType")
                        .WithMany("Colours")
                        .HasForeignKey("ColourTypeId");
                });

            modelBuilder.Entity("TrueColoursAPI.Models.SyncLogDetail", b =>
                {
                    b.HasOne("TrueColoursAPI.Models.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId");

                    b.HasOne("TrueColoursAPI.Models.SyncLog", null)
                        .WithMany("Details")
                        .HasForeignKey("SyncLogId");
                });
#pragma warning restore 612, 618
        }
    }
}
